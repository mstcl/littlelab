version: "{{ docker.compose_version }}"

x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "50m"
    max-file: "4"
x-function: &function
  restart: unless-stopped
  security_opt:
    - no-new-privileges
    logging: *default-logging

networks:
  {{ network }}:
    internal: true
  {{ docker.expose_network }}:
    external: true
  pg-net:
    external: true

services:
  {{ service_directory }}:
    image: {{ image }}
    container_name: {{ service_directory }}
    <<: *function
    cap_drop:
      - SYS_ADMIN
      - AUDIT_WRITE
      - MKNOD
      - SYS_CHROOT
      - SETFCAP
      - SYS_PTRACE
      - DAC_OVERRIDE
      - SETPCAP
    volumes:
      - ./{{ config_file }}:/app/config.properties:ro
    networks: &network_default
      - {{ docker.expose_network }}
      - {{ network }}
    depends_on:
      - {{ service_directory }}-postgres


  {{ service_directory }}-frontend:
    image: {{ piped_frontend.image }}
    container_name: {{ service_directory }}-frontend
    <<: *function
    cap_drop:
      - SYS_ADMIN
      - AUDIT_WRITE
      - MKNOD
      - SYS_CHROOT
      - NET_RAW
      - SETFCAP
      - SYS_PTRACE
      - DAC_OVERRIDE
      - SETPCAP
    networks: *network_default
    entrypoint: ash -c 'sed -i s/pipedapi.kavin.rocks/{{ urls.piped.sub }}.{{ base_tld }}/g /usr/share/nginx/html/assets/* && /docker-entrypoint.sh && nginx -g "daemon off;"'
    depends_on:
      - {{ service_directory }}

  {{ service_directory }}-proxy:
    image: {{ piped_proxy.image }}
    container_name: {{ service_directory }}-proxy
    <<: *function
    cap_drop:
      - SYS_ADMIN
    environment:
      - UDS=1
    volumes:
      - {{ location.docker_data }}/{{ service_directory }}/piped-proxy:/app/socket
    networks: *network_default
