---
- name: Create docker network for communication with backend
  tags: ["network", "docker", "postgres"]
  when: docker_postgres_network is defined
  community.docker.docker_network:
    name: "{{ docker_postgres_network }}"

- name: Deploy docker container for {{ service_directory }}
  tags: "docker"
  community.docker.docker_container:
    state: "{{ docker_state }}"
    recreate: "{{ docker_recreate }}"
    name: "{{ docker_name }}"
    image: "{{ docker_image }}"
    security_opts:
      - no-new-privileges
    restart_policy: "{{ docker_restart_policy }}"
    log_driver: json-file
    log_options:
      max-size: "50m"
      max-file: "4"
    networks: "{{ docker_networks | default(omit) }}"
    published_ports: "{{ docker_ports | default(omit) }}"
    read_only: "{{ docker_read_only | default(omit) }}"
    tmpfs: "{{ docker_tmpfs | default(omit) }}"
    ulimits: "{{ docker_ulimits | default(omit) }}"
    user: "{{ docker_user | default(omit) }}"
    command: "{{ docker_command | default(omit) }}"
    entrypoint: "{{ docker_entrypoint | default(omit) }}"
    volumes: "{{ docker_volumes | default(omit) }}"
    env: "{{ docker_env | default(omit) }}"
    cap_drop: "{{ docker_cap_drop | default(omit) }}"
    capabilities: "{{ docker_capabilities | default(omit) }}"
    memory: "{{ docker_memory | default(omit) }}"
    cpus: "{{ docker_cpus | default(omit) }}"
    network_mode: "{{ docker_network_mode | default(omit) }}"
    healthcheck:
      test: ["NONE"]
